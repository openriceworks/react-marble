import * as t from 'io-ts';
import { Observable } from 'rxjs';
import { EventCodec } from '../../event/event';
import { Event, EventMetadata } from '../../event/event.interface';
import { EventCreator } from '../../event/event.factory';
declare type EventLike = {
    type: string;
} | string;
export declare function matchEvent<E1 extends EventCodec, E2 extends EventCodec, E3 extends EventCodec>(e1: E1, e2: E2, e3: E3): (o: Observable<Event>) => Observable<t.TypeOf<E1> & {
    metadata: EventMetadata;
} | t.TypeOf<E2> & {
    metadata: EventMetadata;
} | t.TypeOf<E3> & {
    metadata: EventMetadata;
}>;
export declare function matchEvent<E1 extends EventCreator<string, any>, E2 extends EventCreator<string, any>, E3 extends EventCreator<string, any>>(e1: E1, e2: E2, e3: E3): (o: Observable<Event>) => Observable<ReturnType<E1> | ReturnType<E2> | ReturnType<E3>>;
export declare function matchEvent<E1 extends EventLike, E2 extends EventLike, E3 extends EventLike>(e1: E1, e2: E2, e3: E3): (o: Observable<Event>) => Observable<Event<unknown, any>>;
export declare function matchEvent<E1 extends EventCodec, E2 extends EventCodec>(e1: E1, e2: E2): (o: Observable<Event>) => Observable<t.TypeOf<E1> & {
    metadata: EventMetadata;
} | t.TypeOf<E2> & {
    metadata: EventMetadata;
}>;
export declare function matchEvent<E1 extends EventCreator<string, any>, E2 extends EventCreator<string, any>>(e1: E1, e2: E2): (o: Observable<Event>) => Observable<ReturnType<E1> | ReturnType<E2>>;
export declare function matchEvent<E1 extends EventLike, E2 extends EventLike>(e1: E1, e2: E2): (o: Observable<Event>) => Observable<Event<unknown, any>>;
export declare function matchEvent<E1 extends EventCodec>(e1: E1): (o: Observable<Event>) => Observable<t.TypeOf<E1> & {
    metadata: EventMetadata;
}>;
export declare function matchEvent<E1 extends EventCreator<string, any>>(e1: E1): (o: Observable<Event>) => Observable<ReturnType<E1>>;
export declare function matchEvent<E1 extends EventLike>(e1: E1): (o: Observable<Event>) => Observable<Event<unknown, any>>;
export {};
//# sourceMappingURL=matchEvent.operator.d.ts.map