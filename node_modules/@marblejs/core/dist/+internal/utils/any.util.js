"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fromTask = exports.fromIO = exports.pipeFromArray = exports.parseJson = exports.stringifyJson = exports.bufferFrom = exports.wait = exports.getPortEnv = exports.isTestEnv = exports.isNullable = exports.isNonNullable = void 0;
const rxjs_1 = require("rxjs");
const function_1 = require("fp-ts/lib/function");
const O = require("fp-ts/lib/Option");
const E = require("fp-ts/lib/Either");
const string_util_1 = require("./string.util");
const isNonNullable = (value) => value !== undefined && value !== null;
exports.isNonNullable = isNonNullable;
const isNullable = (value) => !(0, exports.isNonNullable)(value);
exports.isNullable = isNullable;
const isTestEnv = () => process.env.NODE_ENV === 'test';
exports.isTestEnv = isTestEnv;
const getPortEnv = () => (0, function_1.pipe)(O.fromNullable(process.env.PORT), O.map(Number), O.toUndefined);
exports.getPortEnv = getPortEnv;
const wait = (seconds = 1) => new Promise(res => {
    setTimeout(() => res(undefined), seconds * 1000);
});
exports.wait = wait;
const bufferFrom = (data) => Buffer.from(data);
exports.bufferFrom = bufferFrom;
const stringifyJson = (data) => !(0, string_util_1.isString)(data) ? JSON.stringify(data) : data;
exports.stringifyJson = stringifyJson;
const parseJson = (data) => (0, function_1.pipe)(E.tryCatch(() => JSON.parse(data), () => data), E.fold(function_1.identity, function_1.identity));
exports.parseJson = parseJson;
const pipeFromArray = (fns) => {
    if (fns.length === 0)
        return function_1.identity;
    if (fns.length === 1)
        return fns[0];
    return function piped(input) {
        return fns.reduce((prev, fn) => fn(prev), input);
    };
};
exports.pipeFromArray = pipeFromArray;
const fromIO = (fa) => (0, rxjs_1.defer)(() => (0, rxjs_1.of)(fa()));
exports.fromIO = fromIO;
const fromTask = (fa) => (0, rxjs_1.defer)(fa);
exports.fromTask = fromTask;
