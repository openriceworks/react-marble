export declare const getArrayFromEnum: (E: Record<string, unknown>) => string[];
export declare const getHead: <T>(array: T[]) => import("fp-ts/lib/Option").Option<NonNullable<T>>;
export declare const getLast: <T>(array: T[]) => import("fp-ts/lib/Option").Option<NonNullable<T>>;
export declare const filterArray: <T>(f: (v: T) => boolean) => (array: T[]) => T[];
export declare const mapArray: <T, R>(f: (v: T) => R) => (array: T[]) => R[];
export declare const insertIf: (condition: boolean) => <T>(...elements: T[]) => NonNullable<T>[];
export declare const insertIfElse: (condition: boolean) => <T>(...elements: T[]) => <U>(...elseElements: U[]) => NonNullable<T>[] | NonNullable<U>[];
//# sourceMappingURL=array.util.d.ts.map