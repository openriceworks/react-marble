"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getErrorMessage = exports.throwException = exports.encodeError = exports.isError = exports.isNamedError = exports.NamedError = void 0;
const string_util_1 = require("./string.util");
class NamedError extends Error {
    constructor(name, message) {
        super(message);
        this.name = name;
    }
}
exports.NamedError = NamedError;
const isNamedError = (data) => !!(data === null || data === void 0 ? void 0 : data.name) && !!(data === null || data === void 0 ? void 0 : data.message);
exports.isNamedError = isNamedError;
const isError = (data) => !!(data === null || data === void 0 ? void 0 : data.stack) && !!(data === null || data === void 0 ? void 0 : data.name);
exports.isError = isError;
const encodeError = (error) => !(0, exports.isError)(error) ? error : ['name', ...Object.getOwnPropertyNames(error)]
    .filter(key => !['stack'].includes(key))
    .reduce((acc, key) => {
    acc[key] = error[key];
    return acc;
}, Object.create(null));
exports.encodeError = encodeError;
const throwException = (error) => { throw error; };
exports.throwException = throwException;
const getErrorMessage = (error) => error instanceof Error
    ? error.message
    : (0, string_util_1.isString)(error)
        ? error
        : JSON.stringify(error);
exports.getErrorMessage = getErrorMessage;
