"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bodyParser$ = void 0;
const http_1 = require("@marblejs/http");
const rxjs_1 = require("rxjs");
const operators_1 = require("rxjs/operators");
const function_1 = require("fp-ts/lib/function");
const parsers_1 = require("./parsers");
const body_util_1 = require("./body.util");
const PARSEABLE_METHODS = ['POST', 'PUT', 'PATCH'];
const bodyParser$ = ({ type = ['*/*'], parser = parsers_1.defaultParser, } = {}) => req$ => req$.pipe((0, operators_1.mergeMap)(req => PARSEABLE_METHODS.includes(req.method)
    && !(0, body_util_1.hasBody)(req)
    && !(0, body_util_1.isMultipart)(req)
    && (0, body_util_1.matchType)(type)(req)
    ? (0, function_1.pipe)((0, body_util_1.getBody)(req), (0, operators_1.map)(parser(req)), (0, operators_1.tap)(body => req.body = body), (0, operators_1.mapTo)(req), (0, operators_1.catchError)(error => (0, rxjs_1.throwError)(() => new http_1.HttpError(`Request body parse error: "${error.toString()}"`, http_1.HttpStatus.BAD_REQUEST, undefined, req))))
    : (0, rxjs_1.of)(req)));
exports.bodyParser$ = bodyParser$;
