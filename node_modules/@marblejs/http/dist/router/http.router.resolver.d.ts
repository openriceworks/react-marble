import { Observable, Subject } from 'rxjs';
import { EffectContext } from '@marblejs/core';
import { HttpServer, HttpRequest, WithHttpRequest } from '../http.interface';
import { HttpEffectResponse, HttpErrorEffect, HttpOutputEffect } from '../effects/http.effects.interface';
import { Routing } from './http.router.interface';
declare type ResolveRoutingConfig = Readonly<{
    routing: Routing;
    ctx: EffectContext<HttpServer>;
    output$?: HttpOutputEffect;
    error$?: HttpErrorEffect;
}>;
export declare const resolveRouting: (config: ResolveRoutingConfig) => {
    resolve: (request: HttpRequest) => void;
    errorSubject: Subject<WithHttpRequest<{
        error: Error;
    }, HttpRequest<unknown, unknown, unknown>>>;
    outputSubject: Subject<WithHttpRequest<HttpEffectResponse<any>, HttpRequest<unknown, unknown, unknown>>>;
    response$: Observable<{
        request: HttpRequest<unknown, unknown, unknown>;
    } & HttpEffectResponse<any>>;
};
export {};
//# sourceMappingURL=http.router.resolver.d.ts.map