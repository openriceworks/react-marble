import { JSONSchema7 } from 'json-schema';
import { IO } from 'fp-ts/lib/IO';
import { HttpHeaders } from '../http.interface';
export interface RequestMetadata {
    path?: string;
    body?: JSONSchema7;
    headers?: JSONSchema7;
    params?: JSONSchema7;
    query?: JSONSchema7;
}
export declare const HTTP_REQUEST_METADATA_ID_HEADER_KEY = "X-Request-Metadata-Id";
/**
 * Creates random request metadata header entry
 *
 * @returns headers `HttpHeaders`
 */
export declare const createRequestMetadataHeader: IO<HttpHeaders>;
/**
 * Get custom request metadata header value
 *
 * @param headers `HttpHeaders`
 * @returns optional header value
 */
export declare const getHttpRequestMetadataIdHeader: (headers: HttpHeaders) => import("fp-ts/lib/Option").Option<string>;
/**
 * Activates `MARBLE_HTTP_REQUEST_METADATA_ENV_KEY` environment variable
 *
 * @returns `void`
 */
export declare const enableHttpRequestMetadata: IO<void>;
//# sourceMappingURL=metadata.util.d.ts.map